-- 1번 문제 --
SELECT EMP_NAME, EMP_NO, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
JOIN JOB USING (JOB_CODE)
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
WHERE EMP_NO LIKE '7%' 
AND SUBSTR(EMP_NO, 8, 1) = '2'
AND EMP_NAME LIKE '전%';


-- 2번 문제 --
SELECT EMP_ID, EMP_NAME, JOB_NAME, DEPT_TITLE
FROM EMPLOYEE
JOIN JOB USING (JOB_CODE)
-- NATURAL JOIN JOB (NATURAL JOIN 방법)
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
WHERE EMP_NAME LIKE '%형%';
-- '형' 자가 포함된 문자를 찾을때는 앞뒤로 % 붙여서 찾기


-- 3번 문제 --
SELECT EMP_NAME, JOB_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE
JOIN JOB USING (JOB_CODE)
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
WHERE DEPT_ID IN ('D6', 'D5');

-- 4번 문제 --
SELECT EMP_NAME, BONUS, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
LEFT JOIN LOCATION ON (LOCATION_ID = LOCAL_CODE)
WHERE BONUS IS NOT NULL;
-- BONUS 값이 NULL 인 '하동운' 사원의 값을 얻기 위해서 OUTER JOIN 을 해줘야 함.


-- 5번 문제 --
SELECT EMP_NAME, JOB_NAME, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE
JOIN JOB USING (JOB_CODE)
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
JOIN LOCATION ON (LOCATION_ID = LOCAL_CODE)
WHERE DEPT_TITLE IS NOT NULL;


-- 6번 문제 --
SELECT EMP_NAME, JOB_NAME, SALARY, (SALARY * 12) + (SALARY * 12 * NVL(BONUS, 0))
FROM EMPLOYEE
JOIN JOB USING (JOB_CODE)
JOIN SAL_GRADE USING (SAL_LEVEL)
WHERE SALARY > MIN_SAL
ORDER BY 4 DESC;


-- 7번 문제 --
SELECT EMP_NAME, DEPT_TITLE, LOCAL_NAME, NATIONAL_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
JOIN LOCATION ON (LOCATION_ID = LOCAL_CODE)
JOIN "NATIONAL" USING (NATIONAL_CODE)
WHERE NATIONAL_CODE IN ('KO', 'JP');


-- 8번 문제 --
SELECT E2.EMP_NAME 사원명, E1.DEPT_CODE 부서코드, E1.EMP_NAME 동료이름
FROM EMPLOYEE E1
JOIN EMPLOYEE E2 ON (E1.DEPT_CODE = E2.DEPT_CODE)
WHERE E2.EMP_NAME != E1.EMP_NAME
ORDER BY 사원명;



-- 9번 문제 --
SELECT EMP_NAME, JOB_NAME, SALARY
FROM EMPLOYEE
JOIN JOB USING (JOB_CODE)
WHERE BONUS IS NULL 
AND JOB_CODE IN ('J4', 'J7');



SELECT EMP_NAME, SALARY
FROM EMPLOYEE
JOIN SAL_GRADE USING (SAL_LEVEL)
WHERE SALARY <= MIN_SAL;








